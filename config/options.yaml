args:
  _examples: |
    selenium_wrapper --connect --driver chrome --accessibility --refresh --url https://www.example.com/e/example/login
    selenium_wrapper --connect --driver firefox --url departments --path-project A:\wrk\e\example\1\src --params "{'fruit':'apple','region':'greenland'}"
    selenium_wrapper --connect --driver firefox --url departments --hostname https://www.example.com/e/example
    selenium_wrapper --connect --driver firefox --url events/create --select "[{'frmEventDescription': 'mytext'}]" --delay 1000
    selenium_wrapper --connect --driver firefox --url events/create --select 'frmEventDescription' --delay 1000
    main.py --connect --driver firefox --focus --url request/new --console --delay 1000 --click input-organization-chart --file _tests/files/file2.txt
    main.py --connect --driver firefox --focus --url request/new --console --delay 1000 --files "{'input-organization-chart': '_tests/files/file2.txt'}"
  accessibility:
    _aliases: --accessibility,-a
    _info: it loads site improve addons and click the addons buttons
  clear_cache:
    _show: false

  connect:
    _aliases: --connect,-c
    _info: Launch a selected driver on top of the grid
    _xor: "scroll,scroll_to"

    click:
      _aliases: --click,-c
      _info: select element and perform click
      _repeat: fork
      _xor: id,xpath
      id:
        _info: find element by id
        _type: str
      xpath:
        _examples:  --xpath "//*[@data-id='RequestsDeny']" or --xpath (//*[@data-id='RequestsDeny'])[1]
        _info: find element by xpath
        _type: str
        context:
          _info: select xpath context. default context is document
          _type: str
      wait:
        _info: time to wait before giving-up searching the element
        _label: MILLISECONDS
      pause:
        _info: pause in milliseconds before executing the action
        _label: MILLISECONDS
      file:
        _info: Click input element requires a file
        _values: '1'
        _type: file
    cmd:
      _info: During development of selenium wrapper keep command line on top
    console:
      _info: open browser console
    driver:
      _aliases: --driver,-d
      _default: "firefox"
      _info: select driver from (chrome, edge, firefox, iexplorer)
      _label: DRIVER_NAME
      _required: true
      reset:

    focus:
      _info: focus browser window. This action works partially on iexplorer or edge, those
        browser needs not to be minimized in order to operate.

    page:
      _info: this function needs that the current project have a file named hostname_url.txt
        with the hostname path. The you can use --page without argument to get to the
        home page. Otherwise use --page login to reach to hostname/login and so on
    refresh:
      _info: refresh browser page
      wait:
        _values: '?'
        _label: MILLISECONDS
    scroll:
      _aliases: --scroll,-s
      _info: scroll browser page. Default go bottom
      _repeat: fork
      _values: '?'
      _label: PERCENTAGE
      "@":
        - args.connect.click.pause

    key:
      _info: key press with pyautogui
      _label: KEY
      _repeat: fork
      _xor: down,up
      "@": 
        - args.connect.click.pause
      down:
        _info: key down with pyautogui
      up:
        _info: key up with pyautogui

    keys:
      _info: send hotkeys with pyautogui
      _label: KEY
      _repeat: fork
      _values: +
      "@": 
        - args.connect.click.pause

    write:
      _info: write with pyautogui
      _type: str
      _repeat: fork
      "@": 
        - args.connect.click.pause

    scroll_to:
      _info: scroll to elem in browser page
      _repeat: fork
      _xor: id,xpath
      "@": 
        - args.connect.click.id
        - args.connect.click.xpath
        - args.connect.click.wait
        - args.connect.click.pause

    select:
      _info: Select element
      _repeat: fork
      _xor: id,xpath
      "@": 
        - args.connect.click.id
        - args.connect.click.xpath
        - args.connect.click.wait
        - args.connect.click.pause
      value:
        _type: str 

    url:
      _aliases: --url,-u
      _info: set browser url
      _label: URL
      alias:
        _info: default is hostname_url
        _label: NAME
      hostname:
        _info: provide a hostname to complete a url with relative path
        _label: STRING
      insecure:
        _info: allow to bypass InsecureCertificateException
      path_project:
        _info: mainly use to get the hostname info for the relative url. If not set path
          project is the current directory.
        _label: PATH
      param:
        _info: add url parameters by providing a json file (can be relative) or a json string
          (double or single quotes).
        _repeat: fork
        _label: KEY
        value:
          _type: str

  debug:
    _info: display info in realtime for debugging

  driver_info:
    _info: Show selected driver specifications

  exit:
    _info: Close All Selenium processes

  gui:
    _info: Open a browser to access the grid url and _show the different sessions if any

  reset:
    _info: Reset Selenium Server
    drivers:
      _info: select multiple drivers from (chrome, edge, firefox, iexplorer)
      _values: '*'
      _label: DRIVER_NAME

  selenium_options:
    _info: Show all command line options for Selenium Server

